import path from "path";
import fs from "fs";
import * as chai from "chai";
import chaiSubset from "chai-subset";
import gffToJson from "../src/gffToJson";

chai.use(chaiSubset);
chai.use(require("chai-things"));
chai.should();

describe("gffToJson tests", () => {
  it("parses a gff file correctly", async () => {
    const string = fs.readFileSync(
      path.join(__dirname, "./testData/gff/example.gff3"),
      "utf8"
    );

    const result = await gffToJson(string);
    const expectedResult = [
      {
        messages: [],
        success: true,
        parsedSequence: {
          name: "P1:B01",
          sequence:

          circular: false,
          features: [
            {
              name: "amplicon01",
              start: 1,
              end: 1455,
              strand: 1,
              type: "amplicon"
            },
            {
              name: "gene01",
              start: 27,
              end: 1321,
              strand: 1,
              type: "gene"
            }
          ]
        }
      },
      {
        messages: [],
        success: true,
        parsedSequence: {
          name: "P1:C01",
          sequence:

          circular: false,
          features: [
            {
              name: "amplicon02",
              start: 1,
              end: 1455,
              strand: 1,
              type: "amplicon"
            },
            {
              name: "gene02",
              start: 27,
              end: 1321,
              strand: 1,
              type: "gene"
            }
          ]
        }
      }
    ];
    result.should.deep.equal(expectedResult);
  });
});
